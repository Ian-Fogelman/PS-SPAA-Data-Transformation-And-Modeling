-- 01 - SET THE ROLE, VIRTUAL WARE HOUSE AND DATABASE
USE ROLE accountadmin;
USE WAREHOUSE compute_wh;
USE PLURALSIGHT_DATM;
USE SCHEMA STAGING;

-- 02 - VIEW THE JSON DATA COLUMN IN THE "EMPLOYEE_DATA" TABLE
SELECT HOBBIES FROM PLURALSIGHT_DATM.STAGING.EMPLOYEE_DATA;

-- 03 - CHECK IF THE JSON DATA IN THE "EMPLOYEE_DATA" IS VALID
SELECT CHECK_JSON(HOBBIES) FROM PLURALSIGHT_DATM.STAGING.EMPLOYEE_DATA;

-- EXAMPLE OF BAD JSON (MISSING THE OPENING "{"  AND THE CLOSING"}")
SELECT CHECK_JSON('
  "hobbies": [
    "Reading",
    "Cooking",
    "Traveling"
  ]
') AS BAD_JSON_EXAMPLE

-- 04 - PARSE JSON BY INDEX POSITION
SELECT EMPLOYEE_ID,
   HOBBIES: hobbies AS ALL_FAVORITES,
   HOBBIES: hobbies[0] AS FIRST_FAVORITE,
   HOBBIES: hobbies[1] AS SECOND_FAVORITE,
   HOBBIES: hobbies[2] AS THIRD_FAVORITE
 FROM  PLURALSIGHT_DATM.STAGING.EMPLOYEE_DATA;

--05-A - SETUP A MORE COMPLICATED JSON, WITH NESTED FIELDS
CREATE OR REPLACE TEMPORARY TABLE TEMP_EMPLOYEE_DATA (
    id INT,
    info VARIANT
);

--05-B - INSERT TEST DATA TO TEMP TABLE
INSERT INTO TEMP_EMPLOYEE_DATA
SELECT 1, PARSE_JSON('{
    "FIRST_NAME": "JOHN",
    "LAST_NAME": "DOE",
    "age": 35, 
    "city": "Portland",
    "addresses": [{"street": "789 Elm St", "city": "Portland", "zip": "97205"}],
    "hobbies": ["Reading", "Cooking", "Traveling"]
}') AS JSON_EXAMPLE;

--05-C VIEW THE INSERT DATA
SELECT * FROM TEMP_EMPLOYEE_DATA;

--05-D CHECK THE INSERTED DATA IS VALID JSON
SELECT CHECK_JSON(INFO) FROM TEMP_EMPLOYEE_DATA;

--05-E VIEW THE JSON KEY VALUES
SELECT INFO FROM TEMP_EMPLOYEE_DATA
UNION
SELECT OBJECT_KEYS(info) AS KEYS from TEMP_EMPLOYEE_DATA;

--06 QUERY THE INSERTED DATA
--06-A SELECT THE NESTED JSON, WITH INDEXED POSITION
SELECT 
info:addresses AS ADDRESSES,
info:addresses[0]:street AS STREET,
info:addresses[0]:city AS CITY,
info:addresses[0]:zip AS ZIP,
info:hobbies as HOBBIES,
info:hobbies[0] as First_Hobby,
info:hobbies[1] as Second_Hobby,
info:hobbies[2] as Third_Hobby,
from TEMP_EMPLOYEE_DATA
WHERE ID = 1

--06-B FLATTEN ON EMPLOYEE DATA INFO COLUMN.
SELECT *
FROM TEMP_EMPLOYEE_DATA AS ED,
     TABLE(FLATTEN(input => ED.INFO)) item;
     
--06-C LATERAL FLATTEN ON ADDRESS[0] KEY, NOTE THIS IS A PEICE OF JSON WITH NESTED KEY VALUES
SELECT ADD.* 
FROM TEMP_EMPLOYEE_DATA ED,
lateral flatten(input => ED.INFO, path => 'addresses[0]') as ADD

--06-D LATERAL FLATTEN ON HOBBIES KEY, NOTE THE HOBBIES COLUMN IS A LIST
SELECT HOB.* 
FROM TEMP_EMPLOYEE_DATA ED,
lateral flatten(input => ED.INFO, path => 'hobbies') as HOB

--07 MODIFY JSON DATA
--07-A INSERT A NEW KEY/VALUE {"Team": "Red"}
UPDATE TEMP_EMPLOYEE_DATA ED
SET ED.INFO = OBJECT_INSERT(ED.INFO, 'Team', 'Red')
WHERE ID = 1;

SELECT INFO FROM TEMP_EMPLOYEE_DATA;

--07-B INSERT A NEW ARRAY VALUE INTO  OBBIES
UPDATE TEMP_EMPLOYEE_DATA ED
SET INFO = OBJECT_INSERT(ED.INFO, 'HOBBIES', ARRAY_APPEND(info:hobbies,'Snowboarding'))

SELECT * FROM TEMP_EMPLOYEE_DATA;