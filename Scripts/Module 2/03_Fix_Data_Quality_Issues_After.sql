-- 01 - SET THE ROLE, VIRTUAL WARE HOUSE AND DATABASE
USE ROLE accountadmin;
USE WAREHOUSE compute_wh;
USE PLURALSIGHT_DATM;

-- 02 - RUN THE CLONE COMMAND

CREATE OR REPLACE SCHEMA STAGING CLONE RAW;

-- 03 - DATA QUALITY customer_survey_data
-- TABLE: customer_survey_data
-- SOME OF THE DATA IN THE NAME COLUMN HAVE "-" CHARACTERS BETWEEN THE FIRST AND LAST.
-- SOME OF THE GENDER COLUMNS HAVE "M" OR "F" INSTEAD OF "MALE" OR "FEMALE".
-- ADD A STATE TABLE SO THAT YOU CAN VISUALIZE CUSTOMERS LOCATIONS BETTER, RIGHT NOW ONLY THE CITY COLUMN EXISTS.

SELECT * FROM PLURALSIGHT_DATM.STAGING.CUSTOMER_SURVEY_DATA;

-- ISSUE 01, NAME HAS "-" CHARACTERS
SELECT REPLACE(NAME,'-','')
FROM PLURALSIGHT_DATM.STAGING.CUSTOMER_SURVEY_DATA;

-- ISSUE 02, GENDER HAS INCONSISTENT VALUES
SELECT CASE WHEN GENDER = 'M' THEN 'Male' WHEN GENDER = 'F' THEN'Female' ELSE GENDER END AS GENDER
FROM PLURALSIGHT_DATM.STAGING.CUSTOMER_SURVEY_DATA;

-- VIEW DISTINCT LIST OF CITIES
SELECT DISTINCT CITY FROM PLURALSIGHT_DATM.STAGING.CUSTOMER_SURVEY_DATA;

CREATE OR REPLACE TABLE CITY_STATE_LOOKUP
(
city VARCHAR,
state VARCHAR
)

-- CREATE A LOOKUP TABLE
INSERT INTO CITY_STATE_LOOKUP VALUES ('New York', 'NY');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Los Angeles', 'CA');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Chicago', 'IL');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Miami', 'FL');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Boston', 'NY');
INSERT INTO CITY_STATE_LOOKUP VALUES ('San Francisco', 'CA');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Houston', 'TX');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Dallas', 'TX');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Seattle', 'WA');
INSERT INTO CITY_STATE_LOOKUP VALUES ('San Diego', 'VA');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Phoenix', 'AR');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Denver', 'CO');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Tampa', 'FL');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Charlotte', 'NC');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Orlando', 'FL');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Washington', 'WA');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Philadelphia', 'PA');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Atlanta', 'GA');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Detroit', 'MI');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Minneapolis', 'MI');
INSERT INTO CITY_STATE_LOOKUP VALUES ('Portland', 'OR');

SELECT * FROM CITY_STATE_LOOKUP;

-- BRING ALL THE SOLUTIONS INTO A SINGLE QUERY:

CREATE OR REPLACE TABLE PLURALSIGHT_DATM.STAGING.CUSTOMER_SURVEY_DATA 
AS
SELECT 
CSD.RECORDID,
REPLACE(CSD.NAME,'-','') as NAME,
CSD.AGE,
CASE WHEN CSD.GENDER = 'M' THEN 'Male' WHEN CSD.GENDER = 'F' THEN'Female' ELSE CSD.GENDER END AS GENDER,
CSD.EDUCATION,
CSD.EMPLOYMENT,
CSD.INCOME,
CSD.MARITALSTATUS,
CSD.CITY,
CSD.SATISFACTION,
CSD.RECOMMENDATION,
LKUP.STATE 
    FROM PLURALSIGHT_DATM.STAGING.CUSTOMER_SURVEY_DATA AS CSD
        JOIN CITY_STATE_LOOKUP AS LKUP 
            ON CSD.CITY = LKUP.CITY;

SELECT * FROM PLURALSIGHT_DATM.STAGING.CUSTOMER_SURVEY_DATA;

-- 04 - DATA QUALITY customer_transactions
-- TABLE: customer_transactions
-- COMBINE THE DATE AND TIME COLUMNS TO A SINGLE TRANSACTION DATETIME COLUMN.
-- ADD A TOTAL_TRANSACTION_COUNT COLUMN AND A TOTAL_SPEND COLUMN TO BETTER UNDERSTAND CUSTOMER BEHAVIOR.

SELECT * FROM PLURALSIGHT_DATM.STAGING.CUSTOMERS_TRANSACTIONS;

SELECT TO_TIMESTAMP(CONCAT(DATE, ' ', TIME)) AS TRANSACTION_DATETIME
FROM PLURALSIGHT_DATM.STAGING.CUSTOMERS_TRANSACTIONS;

SELECT 
CUSTOMER_ID,
COUNT(CUSTOMER_ID) AS TOTAL_TRANSACTIONS, 
SUM(PRICE * QUANTITY) AS TOTAL_SPEND, 
FROM PLURALSIGHT_DATM.STAGING.CUSTOMERS_TRANSACTIONS
GROUP BY CUSTOMER_ID
ORDER BY CUSTOMER_ID;

CREATE OR REPLACE TABLE PLURALSIGHT_DATM.STAGING.CUSTOMERS_TRANSACTIONS

AS

SELECT 
CT.TRANSACTION_ID,
CT.CUSTOMER_ID,
TS.TRANSACTION_DATETIME,
CT.PRODUCT_NAME,
CT.CATEGORY,
CT.QUANTITY,
CT.PRICE,
TOT.TOTAL_TRANSACTIONS,
TOT.TOTAL_SPEND

FROM PLURALSIGHT_DATM.STAGING.CUSTOMERS_TRANSACTIONS AS CT

JOIN (
    SELECT TO_TIMESTAMP(CONCAT(DATE, ' ', TIME)) AS TRANSACTION_DATETIME,TRANSACTION_ID
    FROM PLURALSIGHT_DATM.STAGING.CUSTOMERS_TRANSACTIONS
) AS TS 
    ON CT.TRANSACTION_ID = TS.TRANSACTION_ID

JOIN (
    SELECT 
    CUSTOMER_ID,
    COUNT(CUSTOMER_ID) AS TOTAL_TRANSACTIONS, 
    SUM(PRICE * QUANTITY) AS TOTAL_SPEND, 
    
    FROM PLURALSIGHT_DATM.STAGING.CUSTOMERS_TRANSACTIONS
    GROUP BY CUSTOMER_ID
    ORDER BY CUSTOMER_ID
) AS TOT
    ON CT.CUSTOMER_ID = TOT.CUSTOMER_ID

SELECT * FROM PLURALSIGHT_DATM.STAGING.CUSTOMERS_TRANSACTIONS;

SHOW COLUMNS IN PLURALSIGHT_DATM.STAGING.CUSTOMERS_TRANSACTIONS;

-- 05 - DATA QUALITY employee_engagement_survey
-- TABLE: employee_engagement_survey
-- DUPLICATE RECORDS, IDENTIFY AND REMOVE AND DE-DUPLICATE SURVEY RESULTS DATA.
-- MISSING DATA, SOME EMPLOYEES DID NOT SUBMIT AN ENGAGEMENT SURVEY, IDENTIFY THE EMPLOYEE WHOS DID NOT PARTICIPATE.
-- ADD A "AGE-BIN" COLUMN, THAT GROUPS EMPLOYEES OF DIFFERENT AGE GROUPS TOGETHER. I.E. "20-29","30-39","40-69".

SELECT *
FROM PLURALSIGHT_DATM.STAGING.EMPLOYEE_ENGAGEMENT_SURVEY


SELECT 
ROW_NUMBER() OVER (PARTITION BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID) AS RN,
*
FROM PLURALSIGHT_DATM.STAGING.EMPLOYEE_ENGAGEMENT_SURVEY
QUALIFY RN = 1

SELECT 
CASE WHEN AGE BETWEEN 20 AND 29 THEN '20-29' WHEN AGE BETWEEN 30 AND 39 THEN '30-39' WHEN AGE BETWEEN 40 AND 69 THEN '40-69' END AS AGE_BIN
FROM PLURALSIGHT_DATM.STAGING.EMPLOYEE_ENGAGEMENT_SURVEY;

SELECT * FROM PLURALSIGHT_DATM.STAGING.EMPLOYEE_DATA;

CREATE OR REPLACE TABLE PLURALSIGHT_DATM.STAGING.EMPLOYEE_ENGAGEMENT_SURVEY 
AS 

SELECT 
ED.EMPLOYEE_ID,
CONCAT(ED.FIRST_NAME,' ',ED.LAST_NAME) AS NAME,
EES.GENDER,
EES.AGE,
EES.AGE_BIN,
EES.DEPARTMENT,
EES.JOB_TITLE,
EES.SATISFACTION_SCORE,
EES.WORK_LIFE_BALANCE_SCORE,
EES.CAREER_GROWTH_SCORE,
EES.COMMUNICATION_SCORE,
EES.TEAMWORK_SCORE

FROM PLURALSIGHT_DATM.STAGING.EMPLOYEE_DATA AS ED
LEFT JOIN (
SELECT 
ROW_NUMBER() OVER (PARTITION BY EMPLOYEE_ID ORDER BY EMPLOYEE_ID) AS RN,
CASE WHEN AGE BETWEEN 20 AND 29 THEN '20-29' WHEN AGE BETWEEN 30 AND 39 THEN '30-39' WHEN AGE BETWEEN 40 AND 69 THEN '40-69' END AS AGE_BIN,
*
FROM PLURALSIGHT_DATM.STAGING.EMPLOYEE_ENGAGEMENT_SURVEY
QUALIFY RN = 1) AS EES 
ON ED.EMPLOYEE_ID = EES.EMPLOYEE_ID
ORDER BY ED.EMPLOYEE_ID


-- NULL VALUES INDICATE THAT THE EMPLOYEE DID NOT PARTIICIPATE IN THE EMPLOYEE SURVEY.... OH NO! 
SELECT * FROM PLURALSIGHT_DATM.STAGING.EMPLOYEE_ENGAGEMENT_SURVEY;
